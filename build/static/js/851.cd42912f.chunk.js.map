{"version":3,"file":"static/js/851.cd42912f.chunk.js","mappings":"8IAEA,MA6BA,EA7BsBA,MACpBC,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,+DACbH,EAAOI,OAAQ,EAEf,MAAMC,EAAYJ,SAASK,eAAe,YAK1C,OAJID,GACFA,EAAUE,YAAYP,GAGjB,KACDK,GAAaL,EAAOQ,YACtBH,EAAUI,YAAYT,EACxB,CACD,GACA,KAGDU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAC,iCACxCC,EAAAA,EAAAA,KAAA,OAAKC,GAAG,WAAWH,UAAU,qB,6GCnB5B,SAASI,EAAQC,GACtB,OAAKA,EAGEA,EAAQC,QACb,8BACA,CAACC,EAAOC,EAAMC,IAAS,IAAID,YAAeC,OALvB,EAOvB,C,+BCHA,MAyGA,EAzGiBC,KACf,MAAM,KAAEC,IAASC,EAAAA,EAAAA,MACX,cAAEC,EAAa,QAAEC,EAAO,MAAEC,IAAUC,EAAAA,EAAAA,KACpCC,EAAOJ,EAAcF,GAE3B,GAAIG,EACF,OAAOZ,EAAAA,EAAAA,KAACgB,EAAAA,EAAc,IAGxB,GAAIH,EACF,OACEb,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA6BC,UAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,CAAC,4BACdc,EAAMI,aAMxC,IAAKF,EACH,OACEf,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA6BC,UAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAC,yBACxCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAAoBC,SAAC,iDAClCC,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CACHC,GAAG,QACHrB,UAAU,8CAA6CC,SACxD,sBAQT,MAAMI,EAAUD,GAAQkB,EAAAA,EAAAA,IAAOL,EAAKZ,UAEpC,OACEN,EAAAA,EAAAA,MAACwB,EAAAA,EAAa,CAAAtB,SAAA,EACZC,EAAAA,EAAAA,KAACsB,EAAAA,EAAG,CACFC,MAAO,GAAGR,EAAKQ,2BACfC,YAAaT,EAAKU,QAClBC,MAAOX,EAAKW,MACZC,KAAK,aAEP3B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8BAA6BC,UAC1CF,EAAAA,EAAAA,MAAA,WAASC,UAAU,oBAAmBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,MAACqB,EAAAA,GAAI,CACHC,GAAG,QACHrB,UAAU,sDAAqDC,SAAA,EAE/DC,EAAAA,EAAAA,KAAA,OACEF,UAAU,eACV8B,KAAK,OACLC,OAAO,eACPC,QAAQ,YACRC,MAAM,6BAA4BhC,UAElCC,EAAAA,EAAAA,KAAA,QACEgC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,kCAEA,qBAKVtC,EAAAA,EAAAA,MAAA,UAAQC,UAAU,OAAMC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAEgB,EAAKQ,SAC9CvB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kCAAiCC,UAC9CF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAOgB,EAAKqB,SAAS,oBAIxBrB,EAAKW,QACJ1B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,UACvCC,EAAAA,EAAAA,KAAA,OACEV,IAAKyB,EAAKW,MACVW,IAAKtB,EAAKQ,MACVzB,UAAU,6BACVc,QAAQ,cAMhBZ,EAAAA,EAAAA,KAAA,OACEF,UAAU,4BACVwC,wBAAyB,CAAEC,OAAQpC,MAGrCH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,UACpBC,EAAAA,EAAAA,KAACf,EAAAA,EAAa,aAIN,C,6DC5GpB,MAiEA,EAjEYuD,IAOL,IAPM,MACXjB,EAAK,YACLC,EAAW,MACXE,EAAK,UACLe,EAAS,eACTC,EAAc,KACdf,EAAO,WACRa,EACC,MAAMG,EAAW,mBACXC,EAAe,sCAGrB,OACE/C,EAAAA,EAAAA,MAACgD,EAAAA,GAAM,CAAA9C,SAAA,EAELF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAQwB,EAAM,MAAIoB,MAClB3C,EAAAA,EAAAA,KAAA,QAAM8C,KAAK,cAAc3C,QAASqB,KAClCxB,EAAAA,EAAAA,KAAA,QAAM+C,IAAI,YAAYC,KAAMP,KAG5BzC,EAAAA,EAAAA,KAAA,QAAMiD,SAAS,UAAU9C,QAASwB,KAClC3B,EAAAA,EAAAA,KAAA,QAAMiD,SAAS,WAAW9C,QAASoB,KACnCvB,EAAAA,EAAAA,KAAA,QAAMiD,SAAS,iBAAiB9C,QAASqB,KACzCxB,EAAAA,EAAAA,KAAA,QAAMiD,SAAS,WAAW9C,QAASuB,GAASkB,KAC5C5C,EAAAA,EAAAA,KAAA,QAAMiD,SAAS,SAAS9C,QAASsC,KACjCzC,EAAAA,EAAAA,KAAA,QAAMiD,SAAS,eAAe9C,QAASwC,KAGvC3C,EAAAA,EAAAA,KAAA,QAAM8C,KAAK,eAAe3C,QAAQ,yBAClCH,EAAAA,EAAAA,KAAA,QAAM8C,KAAK,kBAAkB3C,QAnBX,sBAoBlBH,EAAAA,EAAAA,KAAA,QAAM8C,KAAK,gBAAgB3C,QAASoB,KACpCvB,EAAAA,EAAAA,KAAA,QAAM8C,KAAK,sBAAsB3C,QAASqB,KAC1CxB,EAAAA,EAAAA,KAAA,QAAM8C,KAAK,gBAAgB3C,QAASuB,GAASkB,KAG7C5C,EAAAA,EAAAA,KAAA,QAAM8C,KAAK,WAAW3C,QAAQ,yCAC9BH,EAAAA,EAAAA,KAAA,QAAM8C,KAAK,cAAc3C,QAAQ,YAGhCuC,IACC1C,EAAAA,EAAAA,KAAA,UAAQ2B,KAAK,sBAAqB5B,SAC/BmD,KAAKC,UAAUT,MAKlBA,IACA1C,EAAAA,EAAAA,KAAA,UAAQ2B,KAAK,sBAAqB5B,SAC/BmD,KAAKC,UAAU,CACd,WAAY,qBACZ,QAAS,UACTL,KAAMH,EACNS,IAAK,oBACLC,gBAAiB,CACf,QAAS,eACTC,OAAQ,kDACR,cAAe,0CAKhB,C","sources":["ui/SubscribeForm.jsx","utils/linkify.js","blog/BlogPost.jsx","layout/SEO.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nconst SubscribeForm = () => {\n  useEffect(() => {\n    // Load Mailchimp script\n    const script = document.createElement('script');\n    script.src = \"//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js\";\n    script.async = true;\n    \n    const container = document.getElementById('mc-embed');\n    if (container) {\n      container.appendChild(script);\n    }\n\n    return () => {\n      if (container && script.parentNode) {\n        container.removeChild(script);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\n      <h2 className=\"text-2xl font-bold mb-4\">Subscribe to Our Newsletter</h2>\n      <div id=\"mc-embed\" className=\"min-h-[200px]\">\n        {/* Mailchimp embed code will be loaded here */}\n      </div>\n    </div>\n  );\n};\n\nexport default SubscribeForm; ","/**\n * Converts internal markdown links to React Router links\n * @param {string} content - The markdown content to process\n * @returns {string} - Processed content with internal links converted\n */\nexport function linkify(content) {\n  if (!content) return '';\n  \n  // Replace internal markdown links [text](/path) with React Router links\n  return content.replace(\n    /\\[([^\\]]+)\\]\\(\\/([^)]+)\\)/g,\n    (match, text, path) => `[${text}](/blog/${path})`\n  );\n}\n\nexport default linkify; ","import React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useBlog } from '../context/BlogContext';\nimport { marked } from 'marked';\nimport SEO from '../layout/SEO';\nimport SubscribeForm from '../ui/SubscribeForm';\nimport { linkify } from '../utils/linkify';\nimport LoadingSpinner from '../ui/LoadingSpinner';\nimport ErrorBoundary from '../ui/ErrorBoundary';\n\nconst BlogPost = () => {\n  const { slug } = useParams();\n  const { getBlogBySlug, loading, error } = useBlog();\n  const blog = getBlogBySlug(slug);\n\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  if (error) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-red-500 text-center\">\n          Error loading blog post: {error.message}\n        </div>\n      </div>\n    );\n  }\n\n  if (!blog) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center\">\n          <h1 className=\"text-4xl font-bold mb-4\">Blog Post Not Found</h1>\n          <p className=\"text-gray-600 mb-4\">The requested blog post could not be found.</p>\n          <Link\n            to=\"/blog\"\n            className=\"text-blue-500 hover:text-blue-600 underline\"\n          >\n            Back to Blog\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  const content = linkify(marked(blog.content));\n\n  return (\n    <ErrorBoundary>\n      <SEO\n        title={`${blog.title} | Akiko Adventures`}\n        description={blog.excerpt}\n        image={blog.image}\n        type=\"article\"\n      />\n      <div className=\"container mx-auto px-4 py-8\">\n        <article className=\"max-w-4xl mx-auto\">\n          <div className=\"mb-8\">\n            <Link\n              to=\"/blog\"\n              className=\"text-blue-500 hover:text-blue-600 flex items-center\"\n            >\n              <svg\n                className=\"w-4 h-4 mr-2\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\n                />\n              </svg>\n              Back to Blog\n            </Link>\n          </div>\n\n          <header className=\"mb-8\">\n            <h1 className=\"text-4xl font-bold mb-4\">{blog.title}</h1>\n            <div className=\"flex items-center text-gray-600\">\n              <span>{blog.readTime} min read</span>\n            </div>\n          </header>\n\n          {blog.image && (\n            <div className=\"mb-8\">\n              <div className=\"image-container image-lg\">\n                <img\n                  src={blog.image}\n                  alt={blog.title}\n                  className=\"w-full h-full object-cover\"\n                  loading=\"lazy\"\n                />\n              </div>\n            </div>\n          )}\n\n          <div\n            className=\"prose prose-lg max-w-none\"\n            dangerouslySetInnerHTML={{ __html: content }}\n          />\n\n          <div className=\"mt-12\">\n            <SubscribeForm />\n          </div>\n        </article>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default BlogPost; ","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\n\nconst SEO = ({\n  title,\n  description,\n  image,\n  canonical,\n  structuredData,\n  type = 'website'\n}) => {\n  const siteName = 'Akiko Adventures';\n  const defaultImage = 'https://akiko.dev/default-image.jpg';\n  const twitterHandle = '@akikoadventures';\n\n  return (\n    <Helmet>\n      {/* Basic Meta Tags */}\n      <title>{title} | {siteName}</title>\n      <meta name=\"description\" content={description} />\n      <link rel=\"canonical\" href={canonical} />\n\n      {/* Open Graph / Facebook */}\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image || defaultImage} />\n      <meta property=\"og:url\" content={canonical} />\n      <meta property=\"og:site_name\" content={siteName} />\n\n      {/* Twitter */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={twitterHandle} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image || defaultImage} />\n\n      {/* Additional Meta Tags */}\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <meta name=\"theme-color\" content=\"#3B82F6\" />\n\n      {/* Structured Data */}\n      {structuredData && (\n        <script type=\"application/ld+json\">\n          {JSON.stringify(structuredData)}\n        </script>\n      )}\n\n      {/* Default Structured Data */}\n      {!structuredData && (\n        <script type=\"application/ld+json\">\n          {JSON.stringify({\n            '@context': 'https://schema.org',\n            '@type': 'WebSite',\n            name: siteName,\n            url: 'https://akiko.dev',\n            potentialAction: {\n              '@type': 'SearchAction',\n              target: 'https://akiko.dev/search?q={search_term_string}',\n              'query-input': 'required name=search_term_string'\n            }\n          })}\n        </script>\n      )}\n    </Helmet>\n  );\n};\n\nexport default SEO; "],"names":["SubscribeForm","useEffect","script","document","createElement","src","async","container","getElementById","appendChild","parentNode","removeChild","_jsxs","className","children","_jsx","id","linkify","content","replace","match","text","path","BlogPost","slug","useParams","getBlogBySlug","loading","error","useBlog","blog","LoadingSpinner","message","Link","to","marked","ErrorBoundary","SEO","title","description","excerpt","image","type","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","readTime","alt","dangerouslySetInnerHTML","__html","_ref","canonical","structuredData","siteName","defaultImage","Helmet","name","rel","href","property","JSON","stringify","url","potentialAction","target"],"sourceRoot":""}