{"version":3,"file":"static/js/665.7768d478.chunk.js","mappings":"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","sources":["components/SEO.jsx","components/BlogCard.jsx","pages/Blog.jsx"],"sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet-async';\n\nconst SEO = ({\n  title,\n  description,\n  image,\n  canonical,\n  structuredData,\n  type = 'website'\n}) => {\n  const siteName = 'Akiko Adventures';\n  const defaultImage = 'https://akiko.dev/default-image.jpg';\n  const twitterHandle = '@akikoadventures';\n\n  return (\n    <Helmet>\n      {/* Basic Meta Tags */}\n      <title>{title} | {siteName}</title>\n      <meta name=\"description\" content={description} />\n      <link rel=\"canonical\" href={canonical} />\n\n      {/* Open Graph / Facebook */}\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image || defaultImage} />\n      <meta property=\"og:url\" content={canonical} />\n      <meta property=\"og:site_name\" content={siteName} />\n\n      {/* Twitter */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={twitterHandle} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image || defaultImage} />\n\n      {/* Additional Meta Tags */}\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <meta name=\"theme-color\" content=\"#3B82F6\" />\n\n      {/* Structured Data */}\n      {structuredData && (\n        <script type=\"application/ld+json\">\n          {JSON.stringify(structuredData)}\n        </script>\n      )}\n\n      {/* Default Structured Data */}\n      {!structuredData && (\n        <script type=\"application/ld+json\">\n          {JSON.stringify({\n            '@context': 'https://schema.org',\n            '@type': 'WebSite',\n            name: siteName,\n            url: 'https://akiko.dev',\n            potentialAction: {\n              '@type': 'SearchAction',\n              target: 'https://akiko.dev/search?q={search_term_string}',\n              'query-input': 'required name=search_term_string'\n            }\n          })}\n        </script>\n      )}\n    </Helmet>\n  );\n};\n\nexport default SEO; ","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction BlogCard({ title, image, excerpt, readTime, slug }) {\n  return (\n    <article className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300\">\n      <Link to={`/blog/${slug}`}>\n        <img\n          src={image}\n          alt={title}\n          className=\"w-full h-48 object-cover\"\n        />\n        <div className=\"p-6\">\n          <h2 className=\"text-xl font-bold text-gray-900 mb-2 hover:text-blue-600\">\n            {title}\n          </h2>\n          <p className=\"text-gray-600 mb-4 line-clamp-3\">\n            {excerpt}\n          </p>\n          <div className=\"flex items-center text-sm text-gray-500\">\n            <span>{readTime}</span>\n          </div>\n        </div>\n      </Link>\n    </article>\n  );\n}\n\nexport default BlogCard; ","import React, { useCallback, useEffect, useRef } from 'react';\nimport { useBlog } from '../context/BlogContext';\nimport BlogCard from '../components/BlogCard';\nimport SEO from '../components/SEO';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nconst Blog = () => {\n  const { blogs, loading, refreshing, error, hasMore, refreshBlogs, loadMore } = useBlog();\n  const observer = useRef();\n  const isAdmin = localStorage.getItem('isAdmin') === 'true';\n\n  const lastBlogElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    \n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        loadMore();\n      }\n    });\n\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore, loadMore]);\n\n  useEffect(() => {\n    if (loading) return;\n    const handleScroll = () => {\n      if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) return;\n      if (hasMore) loadMore();\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [loading, hasMore, loadMore]);\n\n  if (loading && blogs.length === 0) {\n    return <LoadingSpinner />;\n  }\n\n  if (error) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-red-500 text-center\">\n          Error loading blog posts: {error.message}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ErrorBoundary>\n      <SEO\n        title=\"Travel Blog | Akiko Adventures\"\n        description=\"Explore our travel guides, tips, and stories from around the world.\"\n        type=\"website\"\n      />\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-4xl font-bold\">Travel Blog</h1>\n          {isAdmin && (\n            <button\n              onClick={refreshBlogs}\n              disabled={refreshing}\n              className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {refreshing ? 'Refreshing...' : 'Refresh Blog Data'}\n            </button>\n          )}\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {blogs.map((blog, index) => (\n            <div\n              key={blog.slug}\n              ref={index === blogs.length - 1 ? lastBlogElementRef : null}\n            >\n              <BlogCard blog={blog} />\n            </div>\n          ))}\n        </div>\n        {loading && blogs.length > 0 && (\n          <div className=\"flex justify-center mt-8\">\n            <LoadingSpinner />\n          </div>\n        )}\n        {!hasMore && blogs.length > 0 && (\n          <div className=\"text-center mt-8 text-gray-500\">\n            No more blog posts to load\n          </div>\n        )}\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default Blog; "],"names":["_ref","title","description","image","canonical","structuredData","type","siteName","defaultImage","_jsxs","Helmet","children","_jsx","name","content","rel","href","property","JSON","stringify","url","potentialAction","target","excerpt","readTime","slug","className","Link","to","src","alt","Blog","blogs","loading","refreshing","error","hasMore","refreshBlogs","loadMore","useBlog","observer","useRef","isAdmin","localStorage","getItem","lastBlogElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useEffect","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","length","LoadingSpinner","message","ErrorBoundary","SEO","onClick","disabled","map","blog","index","ref","BlogCard"],"sourceRoot":""}